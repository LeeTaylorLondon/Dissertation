"Nederlandse Top 40 – week 18, 2017" (in Dutch). Dutch Top 40.Retrieved May 5, 2017.
^ "Americansinglecertifications – AJR – Weak". Recording Industry Association of America. Retrieved December 9, 2022.
^ "The Irish Charts – Search Results – Weak". Irish Singles Chart.Retrieved February 18, 2017.
"Americansinglecertifications – AJR – Weak". Recording Industry Association of America. Retrieved December 9, 2022.
^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"The Indie Pop Trio AJR Discuss Their Latest Tour With Ingrid Michaelson, Their Breakout Singles, Finishing Up At Columbia". November 28, 2016. Retrieved January 31, 2017.
In an interview, the band explained that the song is about balancing the need to give in to temptation with the importance of staying strong and resisting an urge.[1] This song is about a guy who tells himself that he will stop his bad habits such as drinking and smoking because it increases the likelihood of his bad behavior. However, things are harder than they seem and he can't refuse the bad offer when it hits him at the moment, he caves in and ultimately gives in.
^ "AJR – Weak" (in Dutch). Ultratop 50. Retrieved April 21, 2017.
"AJR – Weak" (in Dutch). Ultratop 50. Retrieved April 21, 2017.
.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"The Indie Pop Trio AJR Discuss Their Latest Tour With Ingrid Michaelson, Their Breakout Singles, Finishing Up At Columbia". November 28, 2016. Retrieved January 31, 2017.
After the release of its lyric video, the song debuted on the Swedish chart at number 88, and at number 81 in Switzerland. It also entered the top 100 in Austria, Italy, Canada, and the United Kingdom. In the Benelux, The Netherlands, Belgium and Luxembourg. The song was used multiple times in the television show: "Temptation Island".
"AJR – Weak" (in French). Ultratop 50. Retrieved June 23, 2017.
^ "AJR Chart History (Canadian Hot 100)". Billboard.Retrieved March 7, 2017.
^ "AJR – Weak" (in German). GfK Entertainment charts.Retrieved April 7, 2017.
"AJR – Weak" (in German). GfK Entertainment charts.Retrieved April 7, 2017.
"Official Scottish Singles Sales Chart Top 100". Official Charts Company.Retrieved May 27, 2017.
"The Indie Pop Trio AJR Discuss Their Latest Tour With Ingrid Michaelson, Their Breakout Singles, Finishing Up At Columbia"
"Weak" was accompanied by a lyric video afterwards as a single release on October 20, 2016. A music video for the song was released on March 9, 2017, and has 74 million views as of February 9, 2022. The video depicts the group unconscious on a train with Jack Met waking up and struggling to traverse and leave. As he does so, Ryan and Adam appear in and out behind him performing their instruments. Jack finally walks towards the light at the end of the train and suddenly finds himself standing directly on the train track. He turns around just as a train barrels down the track and hits him.[2]
^ "ČNS IFPI" (in Slovak). Hitparáda – Singles Digital Top 100 Oficiálna. IFPI Czech Republic. Note: Select SINGLES DIGITAL - TOP 100 and insert 201709 into search.Retrieved March 7, 2017.
"Weak (Stay Strong Mix) - Single by AJR [feat. Louisa Johnson]"
"Austriansinglecertifications – AJR – Weak" (in German). IFPI Austria. Retrieved May 29, 2018.
^ "Gold-/Platin-Datenbank (AJR; 'Weak')" (in German). Bundesverband Musikindustrie. Retrieved February 17, 2023.
^ "ČNS IFPI" (in Slovak). Hitparáda – Radio Top 100 Oficiálna. IFPI Czech Republic. Note: insert 201737 into search.Retrieved September 26, 2017.
^ a b "Official Russia Top 100 Airplay Chart (week 26)" (in Russian). Tophit. Retrieved June 26, 2017.
"Italiansinglecertifications – AJR – Weak" (in Italian). Federazione Industria Musicale Italiana. Retrieved November 26, 2018. Select "2017" in the "Anno" drop-down menu. Select "Weak" in the "Filtra" field. Select "Singoli" under "Sezione".
"ČNS IFPI" (in Czech). Hitparáda – Radio Top 100 Oficiální. IFPI Czech Republic. Note: Change the chart to CZ – RADIO – TOP 100 and insert 201731 into search.Retrieved August 7, 2017.
^ "Italiansinglecertifications – AJR – Weak" (in Italian). Federazione Industria Musicale Italiana. Retrieved November 26, 2018. Select "2017" in the "Anno" drop-down menu. Select "Weak" in the "Filtra" field. Select "Singoli" under "Sezione".
^"Nederlandse Top 40 – week 18, 2017" (in Dutch). Dutch Top 40.Retrieved May 5, 2017.
"The Irish Charts – Search Results – Weak". Irish Singles Chart.Retrieved February 18, 2017.
^ "Official Scottish Singles Sales Chart Top 100". Official Charts Company.Retrieved May 27, 2017.
"AJR Chart History (Dance Club Songs)". Billboard.Retrieved July 11, 2017.
^ "AJR - Weak (Official Video)". YouTube. AJR. March 9, 2017.
An official remix of the song, titled "Weak (Stay Strong Mix)", was released on April 28, 2017. This version of the song features vocals from English singer-songwriter Louisa Johnson. The remix charted on Tophit's Russia Airplay chart, peaking at number 6.[43]
^ "ARIA Charts – Accreditations – 2020 Singles" (PDF). Australian Recording Industry Association. 2020. Retrieved June 26, 2020.
"ARIA Charts – Accreditations – 2020 Singles" (PDF). Australian Recording Industry Association. 2020. Retrieved June 26, 2020.
^ "ČNS IFPI" (in Czech). Hitparáda – Radio Top 100 Oficiální. IFPI Czech Republic. Note: Change the chart to CZ – RADIO – TOP 100 and insert 201731 into search.Retrieved August 7, 2017.
^ "Weak Remixes EP - Single by AJR". Spotify. AJR. May 5, 2017.
7Weak (Stay Strong Mix)											Toggle Weak (Stay Strong Mix) subsection																					7.1Track listing																											7.2Charts
^ "Jaaroverzichten – Single 2017". Hung Medien. Retrieved December 23, 2017.
"AJR Chart History (Canadian Hot 100)". Billboard.Retrieved March 7, 2017.
"ČNS IFPI" (in Slovak). Hitparáda – Radio Top 100 Oficiálna. IFPI Czech Republic. Note: insert 201737 into search.Retrieved September 26, 2017.
^ "AJR – Weak". Swiss Singles Chart.Retrieved April 10, 2017.
^ "AJR – Weak" (in Dutch). Single Top 100.Retrieved April 28, 2017.
^ "AJR Chart History (Dance Club Songs)". Billboard.Retrieved July 11, 2017.
"Britishsinglecertifications – AJR – Weak". British Phonographic Industry. Retrieved October 22, 2022.
"Danishsinglecertifications – Ajr – Weak". IFPI Danmark. Retrieved January 9, 2018. Scroll through the page-list below until year 2018 to obtain certification.
^ "Weak (Stay Strong Mix) - Single by AJR [feat. Louisa Johnson]". Apple Music (US).
"Jaaroverzichten – Single 2017". Hung Medien. Retrieved December 23, 2017.
^ "AJR Chart History (Pop Songs)". Billboard.Retrieved May 31, 2017.
"The Official Swiss Charts and Music Community: Awards (AJR; 'Weak')". IFPI Switzerland. Hung Medien. Retrieved November 26, 2018.
"Official Singles Chart Top 100". Official Charts Company.Retrieved February 18, 2017.
"Canadiansinglecertifications – AJR – Weak". Music Canada. June 13, 2019. Retrieved June 14, 2019.
Nederlandse Vereniging van Producenten en Importeurs van beeld- en geluidsdragers
^ "Top 100-Jaaroverzicht van 2017". Dutch Top 40. Retrieved November 1, 2019.
^ "ČNS IFPI" (in Czech). Hitparáda – Digital Top 100 Oficiální. IFPI Czech Republic. Note: Change the chart to CZ – SINGLES DIGITAL – TOP 100 and insert 201712 into search.Retrieved March 28, 2017.
This page was last edited on 17 February 2023, at 07:45 (UTC).
"ČNS IFPI" (in Slovak). Hitparáda – Singles Digital Top 100 Oficiálna. IFPI Czech Republic. Note: Select SINGLES DIGITAL - TOP 100 and insert 201709 into search.Retrieved March 7, 2017.
"ČNS IFPI" (in Czech). Hitparáda – Digital Top 100 Oficiální. IFPI Czech Republic. Note: Change the chart to CZ – SINGLES DIGITAL – TOP 100 and insert 201712 into search.Retrieved March 28, 2017.
"AJR – Weak" (in German). Ö3 Austria Top 40.Retrieved March 9, 2017.
^ "Official Singles Chart Top 100". Official Charts Company.Retrieved February 18, 2017.
"Official Russia Top 100 Airplay Chart (week 26)" (in Russian). Tophit. Retrieved June 26, 2017.
"Dutchsinglecertifications – Ajr – Weak" (in Dutch). Nederlandse Vereniging van Producenten en Importeurs van beeld- en geluidsdragers. Retrieved October 14, 2021. Enter Weakin the "Artiest of titel" box. Select 2017 in the drop-down menu saying "Alle statussen"
^ "Danishsinglecertifications – Ajr – Weak". IFPI Danmark. Retrieved January 9, 2018. Scroll through the page-list below until year 2018 to obtain certification.
^ "Top 20 General" (in Russian). Unistar Radio Top 20. Archived from the original on 24 October 2017.
"Classifica settimanale WK 9 2017" (in Italian). Federazione Industria Musicale Italiana. Retrieved March 4, 2017.
^ "AJR – Weak" (in German). Ö3 Austria Top 40.Retrieved March 9, 2017.
^ "The Official Swiss Charts and Music Community: Awards (AJR; 'Weak')". IFPI Switzerland. Hung Medien. Retrieved November 26, 2018.
^ "AJR – Weak". Singles Top 100.Retrieved October 2, 2021.
"Weak" is a song by American indie pop band AJR. It was first released on their EP What Everyone's Thinking on September 16, 2016, by their own label AJR Productions, and was later featured on their second studio album The Click (2017).
"Top 20 General" (in Russian). Unistar Radio Top 20. Archived from the original on 24 October 2017.
^ "Dutchsinglecertifications – Ajr – Weak" (in Dutch). Nederlandse Vereniging van Producenten en Importeurs van beeld- en geluidsdragers. Retrieved October 14, 2021. Enter Weakin the "Artiest of titel" box. Select 2017 in the drop-down menu saying "Alle statussen"
^ "Britishsinglecertifications – AJR – Weak". British Phonographic Industry. Retrieved October 22, 2022.
"AJR - Weak (Official Video)". YouTube. AJR. March 9, 2017.
"The Official Swiss Charts and Music Community: Awards (AJR; 'Weak')"
^ "AJR – Weak" (in French). Ultratop 50. Retrieved June 23, 2017.
"Top 100-Jaaroverzicht van 2017". Dutch Top 40. Retrieved November 1, 2019.
^ "Classifica settimanale WK 9 2017" (in Italian). Federazione Industria Musicale Italiana. Retrieved March 4, 2017.
"AJR – Weak" (in Dutch). Single Top 100.Retrieved April 28, 2017.
^ "Ultratop − Goud en Platina – singles 2017". Ultratop. Hung Medien. Retrieved October 14, 2017.
^ "Austriansinglecertifications – AJR – Weak" (in German). IFPI Austria. Retrieved May 29, 2018.
^ "Canadiansinglecertifications – AJR – Weak". Music Canada. June 13, 2019. Retrieved June 14, 2019.
"Ultratop − Goud en Platina – singles 2017". Ultratop. Hung Medien. Retrieved October 14, 2017.
"AJR – Weak". AFP Top 100 Singles.Retrieved March 10, 2017.
"Weak (Stay Strong Mix) - Single by AJR [feat. Louisa Johnson]". Apple Music (US).
^ "AJR Chart History (Hot 100)". Billboard.Retrieved June 20, 2017.
"Weak Remixes EP - Single by AJR". Spotify. AJR. May 5, 2017.
^ "AJR – Weak". AFP Top 100 Singles.Retrieved March 10, 2017.
"Gold-/Platin-Datenbank (AJR; 'Weak')" (in German). Bundesverband Musikindustrie. Retrieved February 17, 2023.
^ "Oracle Solaris Studio 12.3: C User's Guide, 2.11.27 weak".
Weak symbols can be used as a mechanism to provide default implementations of functions that can be replaced by more specialized (e.g. optimized) ones at link-time. The default implementation is then declared as weak, and, on certain targets, object files with strongly declared symbols are added to the linker command line.
The nm command identifies weak symbols in object files, libraries, and executables. On Linux a weak function symbol is marked with "W" if a weak default definition is available, and with "w" if it is not. Weakly defined variable symbols are marked with "V" and "v". On Solaris "nm" prints "WEAK" instead of "GLOB" for a weak symbol.
The warning is issued by the compiler because it can statically determine that in if (user_hook) the expression user_hook evaluates always to true, because it contains an ELF jump table entry. The error message is issued by the linker. The build for main4 includes the same warning but no link error.
"Oracle Solaris 11 Express 11/10 Linker and Libraries Guide, 2.11 Weak Symbols".
The weak function attribute is supposed to be used on function declarations. Using it on a function definition may yield unexpected results, depending on the compiler and optimization level.[11]
^ Drepper, Ulrich (October 2011). "How To Write Shared Libraries (Version 4.1.2), 1.5.2 Symbol Relocations, page 6" (PDF).
^ a b "Oracle Solaris 11 Express 11/10 Linker and Libraries Guide, 2.11 Weak Symbols".
When removing the weak attribute and re-executing the build commands, the last one fails with the following error message (on Linux):
, depending on the compiler and used optimization level, the compiler may interpret the conditional as always true (because func can be seen as undefined from a standards point of view).[7] An alternative to the above construct is using a system API to check if func is defined (e.g. dlsym with RTLD_DEFAULT). The above check may also fail for other reasons, e.g. when func contains an elf jump table entry.[9]
"Oracle Solaris Studio 12.3: C User's Guide, 2.9 Supported Attributes"
"Oracle Solaris Studio 12.3: C User's Guide, 2.9 Supported Attributes".
If a library defines a symbol as weak, a program that links that library is free to provide a strong one for, say, customization purposes.
The following examples work on Linux and Solaris with GCC and Solaris Studio.
The build process (e.g. make) can be implemented in a conditional way such that just different versions of a symbol are created or different (specialized) libraries are used and linked depending on the target.
^ "GCC Manual, 6.30 Declaring Attributes of Functions". GNU. Retrieved 2013-05-29.
Drepper, Ulrich (October 2011). "How To Write Shared Libraries (Version 4.1.2), 1.5.2 Symbol Relocations, page 6" (PDF).
A weak symbol denotes a specially annotated symbol during linking of Executable and Linkable Format (ELF) object files. By default, without any annotation, a symbol in an object file is strong. During linking,a strong symbol can override a weak symbol of the same name. In contrast, in the presence of two strong symbols by the same name, the linker resolves the symbol in favor of the first one found.This behavior allows an executable to override standard library functions, such as malloc(3). When linking a binary executable, a weakly declared symbol does not need a definition. In comparison, (by default) a declared strong symbol without a definition triggers an undefined symbol link error.
This page was last edited on 30 September 2022, at 15:27 (UTC).
The GNU Compiler Collection and the Solaris Studio C compiler share the same syntax for annotating symbols as weak, namely a special #pragma, #pragma weak, and, alternatively, a function and variable attribute, __attribute__((weak)).[2][3][4][5][6][7]
^ "Oracle Solaris Studio 12.3: C User's Guide, 2.9 Supported Attributes".
The second-last one still succeeds, and ./slow has the same output.
Weak symbols are not mentioned by the C or C++ language standards; as such, inserting them into code is not very portable. Even if two platforms support the same or similar syntax for marking symbols as weak, the semantics may differ in subtle points, e.g. whether weak symbols during dynamic linking at runtime lose their semantics or not.[1]
C preprocessor (CPP) conditional constructs can also be used to switch between different versions of a symbol. The difference from weak symbols is that weak symbols are interpreted by the linker. The CPP is run during the compilation of each translation unit before the C compiler.
"Oracle Solaris 11 Express 11/10 Linker and Libraries Guide, 2.11 Weak Symbols"
In Solaris, the weak symbols are also used within kernel. The generic part of kernel (called genunix) specifies weak functions that are overridden in platform specific part of the kernel (called unix) such as Virtual memory routines. The kernel runtime linker sets the addresses of these functions when the kernel is combined in memory during boot. This does not work for kernel loadable modules though - weak symbol in the kernel is not replaced with kernel module symbol when the module is loaded.
"How To Write Shared Libraries (Version 4.1.2), 1.5.2 Symbol Relocations, page 6"
Using weak symbols in static libraries has other semantics than in shared ones, i.e. with a static library the symbol lookup stops at the first symbol – even if it is just weak and an object file with a strong symbol is also included in the library archive. On Linux, the linker option --whole-archive changes that behavior.[10]
Removing the weak attribute and re-executing the build commands does not yield build errors and leads to the same output (on Linux) for main and main2. The build commands for the main3 lead to following warning and error messages (on Linux):
On UNIX System V descendent systems, during program runtime the dynamic linker resolves weak symbols definitions like strong ones. For example, a binary is dynamically linked against libraries libfoo.so and libbar.so. libfoo defines symbol f and declares it as weak. libbar also defines f and declares it as strong. Depending on the library ordering on the link command line (i.e. -lfoo -lbar) the dynamic linker uses the weak f from libfoo.so although a strong version is available at runtime. The GNU ld provides the environment variable LD_DYNAMIC_WEAK to provide weak semantics for the dynamic linker.[1][8]
^ a b .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Drepper, Ulrich (2000-06-07). "weak handling".
.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}Drepper, Ulrich (2000-06-07). "weak handling".
Another use case for weak symbols is the maintenance of binary backward compatibility.
"GCC Manual, 6.30 Declaring Attributes of Functions". GNU. Retrieved 2013-05-29.
Some languages have multiple levels of weak reference strength. For example, Java has, in order of decreasing strength, soft, weak, and phantom references, defined in the package java.lang.ref.[4] Each reference type has an associated notion of reachability. The garbage collector (GC) uses an object's type of reachability to determine when to free the object. It is safe for the GC to free an object that is softly reachable, but the GC may decide not to do so if it believes the JVM can spare the memory (e.g. the JVM has much unused heap space). The GC will free a weakly reachable object as soon as the GC notices the object. Unlike the other reference types, a phantom reference cannot be followed. On the other hand, phantom references provide a mechanism to notify the program when an object has been freed (notification is implemented using ReferenceQueues).
Fred L. Drake, Jr., PEP 205: Weak References, Python Enhancement Proposal, January 2001.
In C#, weak references are distinguished by whether they track object resurrection or not. This distinction does not occur for strong references, as objects are not finalized if they have any strong references to them. By default, in C# weak reference do not track resurrection, meaning a weak reference is not updated if an object is resurrected; these are called short weak references, and weak references that track resurrection are called long weak references.[5]
Some non-garbage-collected languages, such as C++, provide weak/strong reference functionality as part of supporting garbage collection libraries. The Boost C++ library provides strong and weak references.It is a mistake to use regular C++ pointers as the weak counterparts of smart pointers because such usage removes the ability to detect when the strong reference count has gone to 0 and the object has been deleted.Worse yet, it doesn't allow for detection of whether another strong reference is already tracking a given plain pointer.This introduces the possibility of having two (or more) smart pointers tracking the same plain pointer (which causes corruption as soon as one of these smart pointers' reference count reaches 0 and the object gets deleted).
A very common case of such strong vs. weak reference distinctions is in tree structures, such as the Document Object Model (DOM), where parent-to-child references are strong, but child-to-parent references are weak. For example, Apple's Cocoa framework recommends this approach.[3] Indeed, even when the object graph is not a tree, a tree structure can often be imposed by the notion of object ownership, where ownership relationships are strong and form a tree, and non-ownership relationships are weak and not needed to form the tree – this approach is common in C++ (pre-C++11), using raw pointers as weak references. This approach, however, has the downside of not allowing the ability to detect when a parent branch has been removed and deleted. Since the C++11 standard, a solution was added by using shared_ptr and weak_ptr, inherited from the Boost library.
Java 1.2 in 1998 introduced[6] two kinds of weak references, one known as a “soft reference” (intended to be used for maintaining GC-managed in-memory caches, but which doesn’t work very well in practice on some platforms with dynamic heap like Android[7]) and the other simply as a “weak reference”.It also added a related experimental mechanism dubbed “phantom references” as an alternative to the dangerous and inefficient finalize() mechanism.[8]
4Examples											Toggle Examples subsection																					4.1Java																											4.2Smalltalk																											4.3Lua																											4.4Objective-C 2.0																											4.5Vala																											4.6Python
^ Nicholas, Ethan (May 4, 2006). "Understanding Weak References". java.net. Archived from the original on 2011-03-03. Retrieved October 1, 2010.
This page was last edited on 19 February 2023, at 08:03 (UTC).
Garbage collection is used to clean up unused objects and so reduce the potential for memory leaks and data corruption. There are two main types of garbage collection: tracing and reference counting. Reference counting schemes record the number of references to a given object and collect the object when the reference count becomes zero. Reference-counting cannot collect cyclic (or circular) references because only one object may be collected at a time. Groups of mutually referencing objects which are not directly referenced by other objects and are unreachable can thus become permanently resident; if an application continually generates such unreachable groups of unreachable objects this will have the effect of a memory leak. Weak references (references which are not counted in reference counting) may be used to solve the problem of circular references if the reference cycles are avoided by using weak references for some of the references within the group.
Goldshtein, Sasha; Zurbalev, Dima; Flatow, Ido (2012). Pro .NET Performance: Optimize Your C# Applications. Apress. ISBN 978-1-4302-4458-5.
Java theory and practice: Plugging memory leaks with weak references
Nicholas, Ethan (May 4, 2006). "Understanding Weak References". java.net. Archived from the original on 2011-03-03. Retrieved October 1, 2010.
Another use of weak references is in writing a cache. Using, for example, a weak hash map, one can store in the cache the various referred objects via a weak reference. When the garbage collector runs — when for example the application's memory usage gets sufficiently high — those cached objects which are no longer directly referenced by other objects are removed from the cache.
In Objective-C 2.0, not only garbage collection, but also automatic reference counting will be affected by weak references. All variables and properties in the following example are weak.
The difference between weak (__weak) and unsafe_unretained (__unsafe_unretained) is that when the object the variable pointed to is being deallocated, whether the value of the variable is going to be changed or not. weak ones will be updated to nil and the unsafe_unretained one will be left unchanged, as a dangling pointer. The weak references is added to Objective-C since Mac OS X 10.7 "Lion" and iOS 5, together with Xcode 4.1 (4.2 for iOS), and only when using ARC. Older versions of Mac OS X, iOS, and GNUstep support only unsafe_unretained references as weak ones.
Weak references can be useful when keeping a list of the current variables being referenced in the application. This list must have weak links to the objects. Otherwise, once objects are added to the list, they will be referenced by it and will persist for the duration of the program.
.mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"PHP: WeakReference - Manual".
7External links											Toggle External links subsection																					7.1C++																											7.2Java																											7.3PHP																											7.4Python
Weak references have a number of common uses. When using reference counting garbage collection, weak references can break reference cycles, by using a weak reference for a link in the cycle. When one has an associative array (mapping, hash map) whose keys are (references to) objects, for example to hold auxiliary data about objects, using weak references for the keys avoids keeping the objects alive just because of their use as keys. When one has an object where other objects are registered, such as in the observer pattern (particularly in event handling), if a strong reference is kept, objects must be explicitly unregistered, otherwise a memory leak occurs (the lapsed listener problem), while a weak reference removes the need to unregister. When holding cached data that can be recreated if necessary, weak references allow the cache to be reclaimed, effectively producing discardable memory. This last case (a cache) is distinct from others, as it is preferable that the objects only be garbage collected if necessary, and there is thus a need for finer distinctions within weak references, here a stronger form of a weak reference. In many cases weak references do not need to be directly used, instead simply using a weak array or other container whose keys or values are weak references.
^ 8.8. weakref — Weak references, The Python Standard Library
// a weak reference is used to avoid circular references between nodes of a doubly-linked list
^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background:url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background:url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background:url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg")right 0.1em center/9px no-repeat}.mw-parser-output .cs1-ws-icon a{background:url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg")right 0.1em center/12px no-repeat}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#3a3;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}"PHP: WeakReference - Manual".
If a weak reference is created, and then elsewhere in the code get() is used to get the actual object, the weak reference isn't strong enough to prevent garbage collection, so it may be (if there are no strong references to the object) that get() suddenly starts returning null.[9]
Weak references are also used to minimize the number of unnecessary objects in memory by allowing the program to indicate which objects are of minor importance by only weakly referencing them.[citation needed]
In computer programming, a weak reference is a reference that does not protect the referenced object from collection by a garbage collector, unlike a strong reference. An object referenced only by weak references – meaning "every chain of references that reaches the object includes at least one weak reference as a link" – is considered weakly reachable, and can be treated as unreachable and so may be collected at any time. Some garbage-collected languages feature or support various levels of weak references, such as C#, Java, Lisp, OCaml, Perl, Python[1] and PHP since the version 7.4.[2]
